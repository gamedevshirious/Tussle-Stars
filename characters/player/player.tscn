[gd_scene load_steps=20 format=2]

[ext_resource path="res://characters/player/player.gd" type="Script" id=1]
[ext_resource path="res://resources/sprites/buttons/right.png" type="Texture" id=2]
[ext_resource path="res://resources/shaders/outline.shader" type="Shader" id=3]
[ext_resource path="res://resources/sprites/buttons/up.png" type="Texture" id=4]
[ext_resource path="res://resources/sprites/buttons/down.png" type="Texture" id=5]
[ext_resource path="res://resources/sprites/buttons/left.png" type="Texture" id=6]
[ext_resource path="res://resources/sprites/buttons/shoot.png" type="Texture" id=7]
[ext_resource path="res://characters/player/MiniMapCamera.gd" type="Script" id=8]

[sub_resource type="SphereShape" id=1]
radius = 0.315579

[sub_resource type="CapsuleShape" id=2]
radius = 0.52393
height = 1.89844

[sub_resource type="SphereMesh" id=3]
radius = 0.3
height = 0.6

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 3 )
shader_param/outline_thickness = 0.02
shader_param/outline_color = Color( 0, 0, 0, 1 )

[sub_resource type="Shader" id=5]
code = "//By David Lipps aka DaveTheDev @ EXPWorlds
//v2.0.0 for Godot 3.2

shader_type spatial;
render_mode ambient_light_disabled;

uniform bool use_shade = true;
uniform bool use_specular = false;
uniform bool use_rim = false;
uniform bool use_light = false;
uniform bool use_shadow = false;

uniform vec4 base_color : hint_color = vec4(1.0);
uniform vec4 shade_color : hint_color = vec4(1.0);
uniform vec4 specular_tint : hint_color = vec4(0.75);
uniform vec4 rim_tint : hint_color = vec4(0.75);

uniform float shade_threshold : hint_range(-1.0, 1.0, 0.001) = 0.0;
uniform float shade_softness : hint_range(0.0, 1.0, 0.001) = 0.01;

uniform float specular_glossiness : hint_range(1.0, 100.0, 0.1) = 15.0;
uniform float specular_threshold : hint_range(0.01, 1.0, 0.001) = 0.5;
uniform float specular_softness : hint_range(0.0, 1.0, 0.001) = 0.1;

uniform float rim_threshold : hint_range(0.00, 1.0, 0.001) = 0.25;
uniform float rim_softness : hint_range(0.0, 1.0, 0.001) = 0.05;
uniform float rim_spread : hint_range(0.0, 1.0, 0.001) = 0.5;

uniform float shadow_threshold : hint_range(0.00, 1.0, 0.001) = 0.7;
uniform float shadow_softness : hint_range(0.0, 1.0, 0.001) = 0.1;

uniform sampler2D base_texture: hint_albedo;
uniform sampler2D shade_texture: hint_albedo;

void light()
{
	float NdotL = dot(NORMAL, LIGHT);
	float is_lit = step(shade_threshold, NdotL);
	vec4 base = texture(base_texture, UV).rgba * base_color.rgba;
	vec4 shade = texture(shade_texture, UV).rgba * shade_color.rgba;
	vec4 diffuse = base;
	

	if (use_shade)
	{
		float shade_value = smoothstep(shade_threshold - shade_softness ,shade_threshold + shade_softness, NdotL);
		diffuse = mix(shade, base, shade_value);
		
		if (use_shadow)
		{
			float shadow_value = smoothstep(shadow_threshold - shadow_softness ,shadow_threshold + shadow_softness, ATTENUATION.r);
			shade_value = min(shade_value, shadow_value);
			diffuse = mix(shade, base, shade_value);
			is_lit = step(shadow_threshold, shade_value);
		}
	}
	
	if (use_specular)
	{
		vec3 half = normalize(VIEW + LIGHT);
		float NdotH = dot(NORMAL, half);
		
		float specular_value = pow(NdotH * is_lit, specular_glossiness * specular_glossiness);
		specular_value = smoothstep(specular_threshold - specular_softness, specular_threshold + specular_softness, specular_value);
		diffuse += specular_tint.rgba * specular_value;
	}
	
	if (use_rim)
	{
		float iVdotN = 1.0 - dot(VIEW, NORMAL);
		float inverted_rim_threshold = 1.0 - rim_threshold;
		float inverted_rim_spread = 1.0 - rim_spread;
		
		float rim_value = iVdotN * pow(NdotL, inverted_rim_spread);
		rim_value = smoothstep(inverted_rim_threshold - rim_softness, inverted_rim_threshold + rim_softness, rim_value);
		diffuse += rim_tint.rgba * rim_value * is_lit;
	}
	
	if (use_light)
	{
		diffuse *= vec4(LIGHT_COLOR, 1.0);
	}
	
	DIFFUSE_LIGHT = diffuse.rgb;
	ALPHA = diffuse.a;
}"

[sub_resource type="ShaderMaterial" id=6]
next_pass = SubResource( 4 )
shader = SubResource( 5 )
shader_param/use_shade = false
shader_param/use_specular = false
shader_param/use_rim = false
shader_param/use_light = false
shader_param/use_shadow = false
shader_param/base_color = Color( 1, 1, 1, 1 )
shader_param/shade_color = Color( 1, 1, 1, 1 )
shader_param/specular_tint = Color( 0.75, 0.75, 0.75, 0.75 )
shader_param/rim_tint = Color( 0.75, 0.75, 0.75, 0.75 )
shader_param/shade_threshold = 0.0
shader_param/shade_softness = 0.01
shader_param/specular_glossiness = 1.0
shader_param/specular_threshold = 0.5
shader_param/specular_softness = 0.1
shader_param/rim_threshold = 0.25
shader_param/rim_softness = 0.05
shader_param/rim_spread = 0.5
shader_param/shadow_threshold = 0.7
shader_param/shadow_softness = 0.1

[sub_resource type="CylinderMesh" id=7]
top_radius = 0.4
bottom_radius = 0.4
height = 1.0

[sub_resource type="CapsuleMesh" id=8]
radius = 0.09
mid_height = 0.75

[sub_resource type="CapsuleMesh" id=9]
radius = 0.09
mid_height = 0.75

[sub_resource type="CapsuleMesh" id=10]
radius = 0.12

[sub_resource type="Animation" id=11]
resource_name = "idle"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Mesh/torso/left:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( -57.1996, -62.2791, 44.7672 ), Vector3( -55.6943, -58.3028, 39.997 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mesh/torso/right:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( -41.6403, -124.954, 11.1051 ), Vector3( -39.9395, -126.977, 14.1999 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Mesh/torso/torso:translation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 2.69235, 0 ), Vector3( 0, 2.71, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Mesh/head/head:translation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 3.67888, 0 ), Vector3( 0, 3.67, 0 ) ]
}

[node name="player" type="KinematicBody"]
script = ExtResource( 1 )

[node name="HUD" type="CanvasLayer" parent="."]

[node name="up" type="TouchScreenButton" parent="HUD"]
position = Vector2( 150, 324 )
normal = ExtResource( 4 )
action = "ui_up"

[node name="right" type="TouchScreenButton" parent="HUD"]
position = Vector2( 230, 404 )
normal = ExtResource( 2 )
action = "ui_right"

[node name="left" type="TouchScreenButton" parent="HUD"]
position = Vector2( 69, 404 )
normal = ExtResource( 6 )
action = "ui_left"

[node name="down" type="TouchScreenButton" parent="HUD"]
position = Vector2( 150, 484 )
normal = ExtResource( 5 )
action = "ui_down"

[node name="shoot" type="TouchScreenButton" parent="HUD"]
position = Vector2( 786, 404 )
normal = ExtResource( 7 )
action = "shoot"

[node name="ViewportContainer" type="ViewportContainer" parent="HUD"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -280.0
margin_top = 20.0
margin_right = -30.0
margin_bottom = 190.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="HUD/ViewportContainer"]
size = Vector2( 250, 170 )
transparent_bg = true
handle_input_locally = false
usage = 3
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="HUD/ViewportContainer/Viewport"]
transform = Transform( 1, 0, 0, 0, 0.405827, 0.91395, 0, -0.91395, 0.405827, 0, 15, 5.00307 )
current = true
script = ExtResource( 8 )

[node name="head" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.28137, 0 )
shape = SubResource( 1 )

[node name="body" type="CollisionShape" parent="."]
transform = Transform( -1.62921e-07, 1, -1.62921e-07, 0, -1.62921e-07, -1, -1, -1.62921e-07, 2.65431e-14, 0, 1.4755, 0 )
shape = SubResource( 2 )

[node name="CameraBase" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0202279, 0 )

[node name="TPCamera" type="Camera" parent="CameraBase"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4.19512, 5.04024 )
fov = 90.0
size = 15.0

[node name="Mesh" type="Spatial" parent="."]
transform = Transform( -1.62921e-07, 0, 1, 0, 1, 0, -1, 0, -1.62921e-07, 0, -0.408068, 0 )

[node name="head" type="Spatial" parent="Mesh"]

[node name="head" type="MeshInstance" parent="Mesh/head"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.67721, 0 )
layers = 513
mesh = SubResource( 3 )
material/0 = SubResource( 6 )

[node name="FPCamera" type="Camera" parent="Mesh/head/head"]
transform = Transform( -1.62921e-07, 0, -1, 0, 1, 0, 1, 0, -1.62921e-07, 0.315048, -0.0349627, 5.1328e-08 )
fov = 90.0

[node name="torso" type="Spatial" parent="Mesh"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.148172, 0 )

[node name="torso" type="MeshInstance" parent="Mesh/torso"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.69566, 0 )
mesh = SubResource( 7 )
material/0 = SubResource( 6 )

[node name="left" type="Position3D" parent="Mesh/torso"]
transform = Transform( 0.854096, 0.200645, -0.479852, 0.378303, 0.393493, 0.837882, 0.356936, -0.897164, 0.260177, -0.00324078, 3.06142, -0.26327 )
__meta__ = {
"_edit_group_": true
}

[node name="upper" type="MeshInstance" parent="Mesh/torso/left"]
transform = Transform( 0.986868, -0.0559773, 0.15152, 0.0571064, 0.998364, -0.00310808, -0.151098, 0.0117199, 0.98845, 7.82311e-08, 0.0358784, -0.409432 )
mesh = SubResource( 8 )
material/0 = SubResource( 6 )

[node name="elbow" type="Position3D" parent="Mesh/torso/left/upper"]
transform = Transform( 0.175565, -0.463803, -0.868369, -0.824196, -0.551648, 0.128005, -0.538401, 0.693234, -0.479115, -0.0217828, -0.0373943, -0.406725 )
__meta__ = {
"_edit_group_": true
}

[node name="hand" type="MeshInstance" parent="Mesh/torso/left/upper/elbow"]
transform = Transform( 1, -2.23517e-08, 2.98023e-08, -7.45058e-09, 1, 1.11759e-08, 8.9407e-08, 1.49012e-08, 1, -0.0156998, -0.0176644, -0.414629 )
mesh = SubResource( 9 )
material/0 = SubResource( 6 )

[node name="Muzzle" type="Position3D" parent="Mesh/torso/left/upper/elbow/hand"]
transform = Transform( 1, -3.42261e-08, -9.31323e-10, 2.61643e-08, 1, -1.86265e-09, -9.31323e-10, 0, 1, -0.00209677, -0.0052557, -0.433681 )

[node name="right" type="Position3D" parent="Mesh/torso"]
transform = Transform( -0.45725, 0.644628, -0.61268, 0.152111, 0.735453, 0.660281, 0.876233, 0.208718, -0.434341, 0.00324077, 3.13388, 0.3 )
__meta__ = {
"_edit_group_": true
}

[node name="upper" type="MeshInstance" parent="Mesh/torso/right"]
transform = Transform( 1, 4.47035e-08, 0, 4.47035e-08, 1, 0, -2.98023e-08, -2.98023e-08, 1, 2.38419e-07, 1.19209e-07, -0.409 )
mesh = SubResource( 8 )
material/0 = SubResource( 6 )

[node name="elbow" type="Position3D" parent="Mesh/torso/right/upper"]
transform = Transform( 0.594988, -0.542542, 0.592991, -0.260614, -0.828161, -0.496213, 0.760309, 0.140699, -0.63414, -0.0083726, -0.00542712, -0.410209 )
__meta__ = {
"_edit_group_": true
}

[node name="hand" type="MeshInstance" parent="Mesh/torso/right/upper/elbow"]
transform = Transform( 1, 0, -5.96046e-08, -7.45058e-09, 1, -2.42144e-08, 2.98023e-08, 0, 1, -0.0154518, -0.0206649, -0.403422 )
mesh = SubResource( 9 )
material/0 = SubResource( 6 )

[node name="legs" type="Spatial" parent="Mesh"]
transform = Transform( 0.998068, 0, -0.0621286, 0, 1, 0, 0.0621286, 0, 0.998068, 0, 0.23107, 0 )
__meta__ = {
"_edit_lock_": true
}

[node name="right" type="Position3D" parent="Mesh/legs"]
transform = Transform( 0.433177, 0.0732443, 0.898328, -0.190577, 0.981601, 0.0118632, -0.88093, -0.17634, 0.439166, 0.0274313, 2.23576, 0.193319 )
__meta__ = {
"_edit_group_": true
}

[node name="upper" type="MeshInstance" parent="Mesh/legs/right"]
transform = Transform( 1, 0, -2.98023e-08, -2.98023e-08, -1.61119e-07, -1, -7.45058e-09, 1, -1.66707e-07, -0.0171196, -0.421865, 0.019 )
mesh = SubResource( 10 )
material/0 = SubResource( 6 )

[node name="knee" type="Position3D" parent="Mesh/legs/right/upper"]
transform = Transform( -0.0396235, -0.112813, -0.992826, 0.919402, 0.385006, -0.0804406, 0.391318, -0.915994, 0.0884646, 0.00755191, -0.00429317, 0.526732 )
__meta__ = {
"_edit_group_": true
}

[node name="lower" type="MeshInstance" parent="Mesh/legs/right/upper/knee"]
transform = Transform( 0.999998, 1.11759e-08, -1.19209e-07, -2.38419e-07, -1.49012e-07, -0.999999, 6.70552e-08, 0.999999, -1.45286e-07, -0.000300884, -0.510887, 0.010267 )
mesh = SubResource( 10 )
material/0 = SubResource( 6 )

[node name="left" type="Position3D" parent="Mesh/legs"]
transform = Transform( 0.74327, -0.360781, 0.563371, 0.393541, 0.916795, 0.0679043, -0.540995, 0.171238, 0.823408, -0.0102438, 2.23576, -0.210141 )
__meta__ = {
"_edit_group_": true
}

[node name="upper" type="MeshInstance" parent="Mesh/legs/left"]
transform = Transform( 1, 3.72529e-09, 0, 2.98023e-08, -1.63913e-07, -1, -1.11759e-08, 1, -1.63913e-07, 0.00711975, -0.421865, 0.019 )
mesh = SubResource( 10 )
material/0 = SubResource( 6 )

[node name="knee" type="Position3D" parent="Mesh/legs/left/upper"]
transform = Transform( 0.909609, 0.410759, -0.0623548, -0.000165045, 0.150442, 0.98862, 0.415464, -0.899247, 0.136911, 0.00958216, -0.0103616, 0.53348 )
__meta__ = {
"_edit_group_": true
}

[node name="lower" type="MeshInstance" parent="Mesh/legs/left/upper/knee"]
transform = Transform( 1, 1.49012e-08, 2.98023e-07, 2.38419e-07, -1.86265e-07, -1, -1.49012e-08, 1, -1.41561e-07, -0.00331423, -0.518717, 0.0107999 )
mesh = SubResource( 10 )
material/0 = SubResource( 6 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 8, 0 )
light_color = Color( 0, 0, 0, 1 )
shadow_enabled = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/idle = SubResource( 11 )
